metadata_version: 2.0.0
title: YoloV8 model
summary: Object detection using YoloV8 model
description: |-
  Ultralytics YOLOv8 represents the forefront of object detection (segmentation/classification) models incorporating advancements from   prior YOLO iterations while introducing novel features to enhance performance and versatility. 

  YOLOv8 prioritizes speed, precision, and user-friendliness, positioning itself as an exceptional solution across diverse tasks such as object detection, oriented bounding boxes detection, tracking, instance segmentation, and image classification.
  Its refined architecture and innovations make it an ideal choice for cutting-edge applications in the field of computer vision.

  YOLOv8 prioritizes speed, precision, and user-friendliness, positioning itself as an exceptional solution across diverse
  tasks such as object detection, oriented bounding boxes detection, tracking, instance segmentation, and image classification.
  Its refined architecture and innovations make it an ideal choice for cutting-edge applications in the field of computer vision.
  The PREDICT method for object detection accepts either an image (in various formats) or a video as input and returns a JSON, image,
  PDF, or video as output, including bounding boxes around the objects of interest that meet a specified probability threshold. For 
  example, if you input an image containing both a cat and a dog, and the model predicts a 50% probability for the dog and 80% for
  the cat, setting the threshold to 70% will result in only the cat being detected, as its probability exceeds 70%.
  The same PREDICT method is also used for semantic segmentation and classification, where the output includes segmented objects
   in the image or video, or the classification of objects, respectively. The following demonstrates the outputs for classification, detection, and segmentation tasks.
 
   <img class='fit', src='https://raw.githubusercontent.com/ai4os-hub/ai4os-yolov8-torch/main/tests/data/det/catin_cls.png'/>
   
   <img class='fit', src='https://raw.githubusercontent.com/ai4os-hub/ai4os-yolov8-torch/main/tests/data/det/catindet.png'/>
   
   <img class='fit', src='https://raw.githubusercontent.com/ai4os-hub/ai4os-yolov8-torch/main/tests/data/det/catin_seg.png'/>
  
  You can use this model to retrain it on your custom dataset. For this purpose, please refer to the README to learn how to
   structure your dataset for different tasks. After preparing the dataset, you can adjust hyperparameters, such as the learning 
   rate or model version, and train the model using transfer learning. Additionally, you can use MLFLOW to track your training 
   experiments. 
  To do so, you will need to set certain environment variables, which are explained in detail in the module's README file.
  
  **NOTE**:
  Among the training arguments, there are options related to augmentation, such as flipping, scaling, etc. 
  The default values are set to automatically activate some of these options during training.
  If you want to disable augmentation entirely or partially, please review the default values and adjust them accordingly to deactivate the desired augmentations.

  **References**
  1. Jocher, G., Chaurasia, A., & Qiu, J. (2023). YOLO by Ultralytics (Version 8.0.0) [Computer software]. https://github.com/ultralytics/ultralytics
  2. https://docs.ultralytics.com
  3. Redmon, J., et al., You Only Look Once: Unified, Real-Time Object Detection, 2015, https://arxiv.org/abs/1506.02640 [cs.CV]
dates:
  created: '2023-08-09'
  updated: '2024-08-12'
links:
  source_code: https://github.com/ai4os-hub/ai4os-yolov8-torch
  docker_image: ai4oshub/ai4os-yolov8-torch
  ai4_template: ai4-template/1.9.9
tags:
  - deep learning
  - object detection
  - vo.imagine-ai.eu
  - general purpose
tasks:
  - Computer Vision
  - Classification
categories:
  - AI4 pre trained
  - AI4 trainable
  - AI4 inference
libraries:
  - PyTorch
data-type:
  - Image
  - Video
